type Settings{
    id: ID!
    key: String!
    text: String
    value: String
    label: MultiLang!
    type: String
    options: [String]
    regex: String
    entity: String
    field: String
}

type SettingsPaginated{
    totalItems: Int!
    page: Int!
    items: [Settings!]
}

type entityFieldValues{
    text: String!
    entityValue: String!
}

type Query {
    settingsFind(id:ID!): Settings
    settingsFindByKey(key:String!): Settings
    settingsFetch: [Settings]
    settingsPaginate( pageNumber: Int, itemsPerPage: Int, search: String, orderBy: String, orderDesc: Boolean): SettingsPaginated
    fetchEntityFieldValues(entity: String!, field: String!, text: String!): [entityFieldValues!]
}

input SettingsInput{
    key: String!
    text: String
    value: String
    label: MultiLangInput!
    type: String
    options: [String]
    regex: String
}

type SettingsDelete{
    id: ID!
    success: Boolean!
}


type Mutation {
    settingsCreate(input: SettingsInput): Settings
    settingsUpdate(id: ID!, input: SettingsInput): Settings
    settingValueUpdateByKey(key:String!, value:String): Settings
    settingsDelete(id: ID!): SettingsDelete!
}
