type File{
    id: ID!
    filename: String!
    description: String
    tags: [String]
    mimetype: String!
    type: String!
    extension: String!
    relativePath: String!
    absolutePath: String!
    size: Float!
    url: String!
    createdAt: String!
    createdBy: CreatedBy
    lastAccess: String
    expirationDate: String
    isPublic: Boolean
    hits: Int
    groups: [ID]
    users: [ID]
}

type CreatedBy{
    user: User
    username: String
}

type FilePaginated{
    totalItems: Int!
    page: Int!
    items: [File!]
}

input FilterPaginateInput{
  pageNumber: Int,
  itemsPerPage: Int,
  search: String,
  filters: [FilterInput],
  orderBy: String,
  orderDesc: Boolean
}

type Query {
    fileFind(id:ID!): File
    filePaginate(input: FilterPaginateInput): FilePaginated
}

input FileInput{
    filename: String!
    extension: String!
    relativePath: String!
    absolutePath: String!
    size: Float!
    url: String!
    createdAt: String!
}

input FileUpdateInput{
    id: ID!
    description: String
    tags: [String]
    expirationDate: String
    isPublic: Boolean
    groups: [ID]
    users: [ID]
}

type FileDelete{
    id: ID!
    success: Boolean!
}

type Mutation {
    fileUpdate(input: FileUpdateInput): File
    fileDelete(id: ID!): FileDelete!
}
