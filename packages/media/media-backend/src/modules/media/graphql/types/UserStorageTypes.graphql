type userStorage{
    id: ID!
    user: User
    capacity: Float!
    usedSpace: Float
    maxFileSize: Float
    fileExpirationTime: Int
    deleteByLastAccess: Boolean
    deleteByCreatedAt: Boolean
}

input userStorageInput{
    name: String!
    capacity: Float!
    usedSpace: Float
    maxFileSize: Float
    fileExpirationTime: Int
    deleteByLastAccess: Boolean
    deleteByCreatedAt: Boolean
}

type userStorageUpdate{
    id: ID!
    name: String
    capacity: Float!
    usedSpace: Float
    maxFileSize: Float
    fileExpirationTime: Int
    deleteByLastAccess: Boolean
    deleteByCreatedAt: Boolean
}

type MediaVariables {
    maxFileSize: Float!
    fileExpirationTime: Int!
}

type Query {
    userStorageFetch: [userStorage],
    userStorageFindByUser: userStorage
    fetchMediaVariables: MediaVariables
}

type Mutation {
    userStorageUpdate(id: ID!, input: userStorageInput): userStorageUpdate
}
